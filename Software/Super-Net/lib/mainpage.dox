/*! \mainpage Super-Net Documentation
 *
 * \section ziel_sec Ziel des Projekts
 * 
 * Ziel des Projekts ist es ein ESP32 mit LoRa Modul(nachfolgend "Node") so zu programmieren,<br>
 * dass dieser sich über eine serielle USB-Schnittstellemit einem Endgerät verbinden lässt<br>
 * um damit anderen Engeräten über die Funkverbindung via LoRa Nachrichten zukommen zu lassen.<br>
 * Dabei wird nicht etwa das Things-Network(TTN) oder LoRaWan genutzt, sondern die "Nodes"<br>
 * funktionieren eigenständig und nutzen lediglich das LoRa modul zum senden und empfangen von Daten.<br>
 * Damit soll es möglich sein, auch in Gebieten wo kein Empfang ist ähnlich wie mit einem Walkie-Talkie<br>
 * miteinander zu kommunizieren.<br>
 * Falls ein "Node" nicht in Reichweite eines anderen ist, fungieren andere, sich in Reichweite<br>
 * befindliche, "Nodes" als Router und leiten die Nachricht an ihr richtiges Ziel weiter.<br>
 * Dabei wird auch automatisch die zuverlässligste Route gewählt.<br>
 * Ein "Node" kann also auch mit Solarpanel oder Akku autark ohne Endgerät, quasi als reiner Router,<br>
 * verwendet werden. Platziert man ein paar davon in einem Gebiet, verbessert das die Zuverlässigkeit<br>
 * der Übertragung von Nachrichten.<br>
 *<br>
 * \section protocol developed Super-Net Protocol:
 *
 * \subsection ideal Ideal Scenario:
 * 
 * The first time a Message is sent, the node trys to send it directly to the recipient, without routing.<br>
 * The Delivery is confirmed by the recipient through sending an ACK packet.
 *
 * \image html ideal.png
 *
 * \subsection s1 Scenario2: Recipient not in Range:
 * 
 * In this scenario the Message can't be delivered directly to the recipient
 *
 * \image html step1.png
 *
 * The Sender broadcasts(sending to the adress 0) a whohas packet asking for a route to Node 4<br>
 * This Whohas packet is reproduced once by each node that received it.
 *
 * \image html step2.png
 *
 * Once Node 4 gets the Whohas packet asking for Node 4, it broadcasts an IHave packet<br>
 * Ihave packets contain a list of Super-Net-hops(Nodes) they passed a number saying how long the route is allowed to be.<br>
 * Each Node that receives an Ihave packet adds its Adress and the signal strength of the received ihave to the hop list<br>
 * in the ihave packet. But only if its Adress isn't already in there and the list isn't longer than the maximum route length<br>
 *
 *
 * \image html step3.png
 *
 * Node 1 waits some time for the ihaves to arrive and then analyzes the list of hops in each ihave packet.<br>
 * Given the signal strength of each hop it then choses the most reliable route and resends the packet<br>
 *
 * \image html step4.png
 *
 *
 * \section install Installation:
 *
 * \subsection ins3 Node:
 *
 * The project was created using Platformio(VSCode Extension) which is required to build it.<br>
 * It comes with Configurations for the Devices Heltec ESP32 WiFi LoRa v2 and Heltec Wireless stick.<br>
 * More Device-Configurations can be added in the platformio.ini file in "Software/Super-Net/",
 * <br> but the pinconfigurations for the LoRa module and the OLED might differ.
 *
 * \subsection ins2 Desktop:
 *
 * The desktop application depends on the python package pyserial<br>
 * python 3.7.9 was used for testing.
 *
 * \subsection ins1 App:
 * the app is build using flutter, but a debug .apk can be found in Software/app/APK <br>
 * but I'm not sure if it can be installed on another device than mine, since it was built for debugging and I don't have another phone available to test it,<br>
 * but with flutter installed, it can be build for any android device.
 */